{"version":3,"file":"vue-maplibre-gl.es.js","sources":["../lib/types.ts","../lib/lib/map.lib.ts","../lib/lib/lng_lat.ts","../lib/components/controls/position.enum.ts","../lib/lib/mapRegistry.ts","../lib/components/map.component.ts","../lib/composable/usePositionWatcher.ts","../lib/composable/useControl.ts","../lib/components/controls/attribution.control.ts","../lib/components/controls/custom.ts","../lib/components/controls/custom.control.ts","../lib/components/controls/fullscreen.control.ts","../lib/components/controls/geolocate.control.ts","../lib/components/controls/navigation.control.ts","../lib/components/controls/scale.control.ts","../lib/components/controls/logo.control.ts","../lib/components/marker.component.ts","../lib/components/popup.component.ts","../lib/components/image.component.ts","../lib/lib/sourceLayer.registry.ts","../lib/lib/source.lib.ts","../lib/composable/useSource.ts","../lib/components/sources/canvas.source.ts","../lib/components/sources/geojson.source.ts","../lib/components/sources/image.source.ts","../lib/components/sources/raster.source.ts","../lib/components/sources/rasterDem.source.ts","../lib/components/sources/vector.source.ts","../lib/components/sources/video.source.ts","../lib/lib/layer.lib.ts","../lib/composable/useDisposableLayer.ts","../lib/components/layers/background.layer.ts","../lib/composable/useLayer.ts","../lib/components/layers/circle.layer.ts","../lib/components/layers/fill.layer.ts","../lib/components/layers/fillExtrusion.layer.ts","../lib/components/layers/heatmap.layer.ts","../lib/components/layers/hillshade.layer.ts","../lib/components/layers/line.layer.ts","../lib/components/layers/raster.layer.ts","../lib/components/layers/symbol.layer.ts","../lib/main.ts"],"sourcesContent":["import type {\n  InjectionKey,\n  Ref,\n  ShallowRef,\n  ComponentInternalInstance,\n  Raw,\n} from \"vue\";\nimport type {\n  Map,\n  Marker,\n  MapEventType,\n  SourceSpecification,\n} from \"maplibre-gl\";\nimport type { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\n\nexport const map = Symbol(\"map\"),\n  mapSymbol = map as InjectionKey<ShallowRef<Map | undefined>>,\n  isLoadedSymbol = Symbol(\"isLoaded\") as InjectionKey<Ref<boolean>>,\n  isInitialized = Symbol(\"isInitialized\"),\n  isInitializedSymbol = isInitialized as InjectionKey<Ref<boolean>>,\n  componentIdSymbol = Symbol(\"componentId\") as InjectionKey<number>,\n  sourceIdSymbol = Symbol(\"sourceId\") as InjectionKey<string>,\n  sourceLayerRegistry = Symbol(\n    \"sourceLayerRegistry\",\n  ) as InjectionKey<SourceLayerRegistry>,\n  markerSymbol = Symbol(\"marker\") as InjectionKey<\n    ShallowRef<Marker | undefined>\n  >;\n\nexport interface MglEvent<T extends keyof MapEventType> {\n  type: string;\n  component: Raw<ComponentInternalInstance>;\n  map: Map;\n  event: MapEventType[T];\n}\n\nexport type SourceOptionProps = SourceSpecification & { sourceId: string };\n","import type { ComponentInternalInstance, Raw } from \"vue\";\nimport type { Map, MapEventType } from \"maplibre-gl\";\nimport type { MglEvent } from \"@/lib/types\";\n\nexport type MapEventHandler<T extends keyof MapEventType> = (\n  e: MapEventType[T],\n) => void;\n\nexport type MapEvent = `map:${keyof MapEventType}`;\n\nexport const MAP_EVENT_TYPES: Array<keyof MapEventType> = [\n  \"error\",\n  \"load\",\n  \"idle\",\n  \"remove\",\n  \"render\",\n  \"resize\",\n  \"webglcontextlost\",\n  \"webglcontextrestored\",\n  \"dataloading\",\n  \"data\",\n  \"tiledataloading\",\n  \"sourcedataloading\",\n  \"styledataloading\",\n  \"sourcedata\",\n  \"styledata\",\n  \"styleimagemissing\",\n  \"dataabort\",\n  \"sourcedataabort\",\n  \"boxzoomcancel\",\n  \"boxzoomstart\",\n  \"boxzoomend\",\n  \"touchcancel\",\n  \"touchmove\",\n  \"touchend\",\n  \"touchstart\",\n  \"click\",\n  \"contextmenu\",\n  \"dblclick\",\n  \"mousemove\",\n  \"mouseup\",\n  \"mousedown\",\n  \"mouseout\",\n  \"mouseover\",\n  \"movestart\",\n  \"move\",\n  \"moveend\",\n  \"zoomstart\",\n  \"zoom\",\n  \"zoomend\",\n  \"rotatestart\",\n  \"rotate\",\n  \"rotateend\",\n  \"dragstart\",\n  \"drag\",\n  \"dragend\",\n  \"pitchstart\",\n  \"pitch\",\n  \"pitchend\",\n  \"wheel\",\n  \"terrain\",\n  \"cooperativegestureprevented\",\n];\n\nexport function createEventHandler<T extends keyof MapEventType>(\n  component: Raw<ComponentInternalInstance>,\n  map: Map,\n  ctx: {\n    emit: (event: MapEvent, payload: MglEvent<T>) => void;\n  },\n  eventName: MapEvent,\n): MapEventHandler<T> {\n  return (payload: MapEventType[T]) =>\n    ctx.emit(eventName, {\n      type: payload.type,\n      map,\n      component,\n      event: payload,\n    });\n}\n","import { type LngLatLike, LngLat } from \"maplibre-gl\";\n\nexport function isLngLatEqual(one: LngLatLike, two: LngLatLike): boolean {\n  const firstPosition = LngLat.convert(one);\n  const secondPosition = LngLat.convert(two);\n\n  return (\n    firstPosition.lng === secondPosition.lng &&\n    firstPosition.lat === secondPosition.lat\n  );\n}\n","export enum Position {\n  TOP_LEFT = \"top-left\",\n  TOP_RIGHT = \"top-right\",\n  BOTTOM_LEFT = \"bottom-left\",\n  BOTTOM_RIGHT = \"bottom-right\",\n}\n\nexport const PositionValues = Object.values(Position);\n","import type { Map as MaplibreMap } from \"maplibre-gl\";\nimport {\n  reactive,\n  type ShallowRef,\n  type Raw,\n  type ComponentInternalInstance,\n} from \"vue\";\n\nexport interface MapInstance {\n  component?: Raw<ComponentInternalInstance>;\n  map?: MaplibreMap;\n  isMounted: boolean;\n  isLoaded: boolean;\n}\n\nconst instances = new Map<symbol | string, MapInstance>(),\n  defaultKey = Symbol(\"default\");\n\n// useMap returns reactive version of MapInstance\nexport function useMap(key: symbol | string = defaultKey): MapInstance {\n  let component = instances.get(key);\n  if (!component) {\n    component = reactive({ isLoaded: false, isMounted: false, language: null });\n    instances.set(key, component);\n  }\n  return component;\n}\n\nexport function registerMap(\n  instance: Raw<ComponentInternalInstance>,\n  map: ShallowRef<MaplibreMap | undefined>,\n  key: symbol | string = defaultKey,\n): MapInstance {\n  let component = instances.get(key);\n  if (!component) {\n    component = reactive({ isLoaded: false, isMounted: false, language: null });\n    instances.set(key, component);\n  }\n\n  component.isLoaded = map.value?.loaded() || false;\n  component.isMounted = false;\n  component.component = instance;\n  component.map = map.value;\n\n  return component;\n}\n","import {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  markRaw,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  type PropType,\n  provide,\n  ref,\n  shallowRef,\n  type SlotsType,\n  watch,\n} from \"vue\";\nimport {\n  Map as MaplibreMap,\n  type FitBoundsOptions,\n  type LngLatBoundsLike,\n  type LngLatLike,\n  type MapEventType,\n  type RequestTransformFunction,\n  type StyleSpecification,\n  type CameraUpdateTransformFunction,\n  type AttributionControlOptions,\n  type WebGLContextAttributesWithType,\n} from \"maplibre-gl\";\nimport {\n  componentIdSymbol,\n  isInitializedSymbol,\n  isLoadedSymbol,\n  mapSymbol,\n  sourceIdSymbol,\n} from \"@/lib/types\";\nimport {\n  MAP_EVENT_TYPES,\n  createEventHandler,\n  type MapEvent,\n  type MapEventHandler,\n} from \"@/lib/lib/map.lib\";\nimport { isLngLatEqual } from \"@/lib/lib/lng_lat\";\nimport { Position } from \"@/lib/components/controls/position.enum\";\nimport { registerMap } from \"@/lib/lib/mapRegistry\";\n\n/**\n * The map component\n *\n * See [Map](https://maplibre.org/maplibre-gl-js/docs/API/classes/Map/).\n */\nexport default defineComponent({\n  name: \"MglMap\",\n  props: {\n    /**\n     * Width of the map container\n     */\n    width: {\n      type: [Number, String] as PropType<number | string>,\n      default: \"100%\",\n    },\n    /**\n     * Height of the map container\n     */\n    height: {\n      type: [Number, String] as PropType<number | string>,\n      default: \"100%\",\n    },\n    /**\n     * If set, an AttributionControl will be added to the map with the provided options. To disable the attribution control, pass false. Note: showing the logo of MapLibre is not required for using MapLibre. Default Value ts compact: true, customAttribution: \"MapLibre ...\".\n     */\n    attributionControl: {\n      type: [Boolean, Object] as PropType<false | AttributionControlOptions>,\n      default: undefined,\n    },\n    /**\n     * The initial bearing (rotation) of the map, measured in degrees counter-clockwise from north. If bearing is not specified in the constructor options, MapLibre GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to 0. Default Value `0`\n     * @vmodel v-model:bearing\n     */\n    bearing: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The threshold, measured in degrees, that determines when the map's bearing will snap to north. For example, with a bearingSnap of 7, if the user rotates the map within 7 degrees of north, the map will automatically snap to exact north. Default Value `7`\n     */\n    bearingSnap: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The initial bounds of the map. If bounds is specified, it overrides center and zoom constructor options.\n     */\n    bounds: {\n      type: [Array, Object] as PropType<LngLatBoundsLike>,\n    },\n    /**\n     * If true, the \"box zoom\" interaction is enabled (see BoxZoomHandler). Default Value ts true\n     */\n    boxZoom: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     *  The initial geographical centerpoint of the map. If center is not specified in the constructor options, MapLibre GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to [0, 0] Note: MapLibre GL JS uses longitude, latitude coordinate order (as opposed to latitude, longitude) to match GeoJSON. Default Value ts [0, 0]\n     * @vmodel v-model:center\n     */\n    center: {\n      type: [Array, Object] as PropType<LngLatLike>,\n    },\n    /**\n     * The max number of pixels a user can shift the mouse pointer during a click for it to be considered a valid click (as opposed to a mouse drag). Default Value ts true\n     */\n    clickTolerance: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * If true, Resource Timing API information will be collected for requests made by GeoJSON and Vector Tile web workers (this information is normally inaccessible from the main Javascript thread). Information will be returned in a resourceTiming property of relevant data events. Default Value `false`\n     */\n    collectResourceTiming: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * If true, symbols from multiple sources can collide with each other during collision detection. If false, collision detection is run separately for the symbols in each source. Default Value `true`\n     */\n    crossSourceCollisions: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * If true, the \"drag to pan\" interaction is enabled. An Object value is passed as options to DragPanHandler#enable. Default Value `true`\n     */\n    dragPan: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * If true, the \"drag to rotate\" interaction is enabled (see DragRotateHandler). Default Value `true`\n     */\n    dragRotate: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * If true, the \"double click to zoom\" interaction is enabled (see DoubleClickZoomHandler). Default Value `true`\n     */\n    doubleClickZoom: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * If true, the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL. For example, http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60. An additional string may optionally be provided to indicate a parameter-styled hash, e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar, where foo is a custom parameter and bar is an arbitrary hash distinct from the map hash. Default Value `false`\n     */\n    hash: {\n      type: [Boolean, String] as PropType<boolean | string>,\n      default: undefined,\n    },\n    /**\n     * Controls the duration of the fade-in/fade-out animation for label collisions after initial map load, in milliseconds. This setting affects all symbol layers. This setting does not affect the duration of runtime styling transitions or raster tile cross-fading. Default Value `300`\n     */\n    fadeDuration: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * A FitBoundsOptions options object to use only when fitting the initial bounds provided above.\n     */\n    fitBoundsOptions: {\n      type: Object as PropType<FitBoundsOptions>,\n    },\n    /**\n     * If false, no mouse, touch, or keyboard listeners will be attached to the map, so it will not respond to interaction. Default Value `true`\n     */\n    interactive: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * If true, keyboard shortcuts are enabled (see KeyboardHandler). Default Value `true`\n     */\n    keyboard: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * A patch to apply to the default localization table for UI strings, e.g. control tooltips. The locale object maps namespaced UI string IDs to translated strings in the target language; see src/ui/default_locale.js for an example with all supported string IDs. The object may specify all UI strings (thereby adding support for a new translation) or only a subset of strings (thereby patching the default translation table). Default Value `null`\n     */\n    locale: {\n      type: Object as PropType<Record<string, string>>,\n    },\n    localIdeographFontFamily: {\n      type: String as PropType<string>,\n    },\n    /**\n     * A string representing the position of the MapLibre wordmark on the map. Valid options are top-left,top-right, bottom-left, or bottom-right. Default Value 'bottom-left'\n     */\n    logoPosition: {\n      type: [String] as PropType<Position>,\n      validator: (val: Position) => val in Position,\n    },\n    /**\n     * If set, the map will be constrained to the given bounds.\n     */\n    maxBounds: {\n      type: [Array, Object] as PropType<LngLatBoundsLike>,\n    },\n    /**\n     * The maximum pitch of the map (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project. Default Value `60`\n     */\n    maxPitch: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The maximum zoom level of the map (0-24). Default Value `22`\n     */\n    maxZoom: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The minimum pitch of the map (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project. Default Value `0`\n     */\n    minPitch: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The minimum zoom level of the map (0-24). Default Value `0`\n     */\n    minZoom: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The initial pitch (tilt) of the map, measured in degrees away from the plane of the screen (0-85). If pitch is not specified in the constructor options, MapLibre GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to 0. Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project. Default Value `0`\n     * @vmodel v-model:pitch\n     */\n    pitch: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * If false, the map's pitch (tilt) control with \"drag to rotate\" interaction will be disabled. Default Value `true`\n     */\n    pitchWithRotate: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * Set of WebGLContextAttributes that are applied to the WebGL context of the map. See https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext for more details. contextType can be set to webgl2 or webgl to force a WebGL version. Not setting it, Maplibre will do it's best to get a suitable context.\n     * @since 8.0.0\n     */\n    canvasContextAttributes: {\n      type: Object as PropType<WebGLContextAttributesWithType>,\n    },\n    /**\n     * If false, the map won't attempt to re-request tiles once they expire per their HTTP cacheControl/expires headers. Default Value `true`\n     */\n    refreshExpiredTiles: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    renderWorldCopies: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    scrollZoom: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * An optional string link to a URL, or an inlined JSON object containing a MapLibre Style Specification.\n     * \n     * Documentation: https://maplibre.org/maplibre-style-spec\n     * \n     * Example: https://demotiles.maplibre.org/style.json\n     */\n    mapStyle: {\n      type: [String, Object] as PropType<string | StyleSpecification>,\n    },\n    /**\n     * If `true`, the map will automatically resize when the browser window resizes.\n     * Default value true\n     */\n    trackResize: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * A callback run before the Map makes a request for an external URL. The callback can be used to modify the url, set headers, or set the credentials property for cross-origin requests.\n     * Expected to return an object with a `url` property and optionally `headers` and `credentials` properties.\n     */\n    transformRequest: {\n      type: Function as PropType<RequestTransformFunction>,\n    },\n    /**\n     * A callback run before the map's camera is moved due to user input or animation. The callback can be used to modify the new center, zoom, pitch and bearing.\n     * Expected to return an object containing center, zoom, pitch or bearing values to overwrite.\n     * @since 6.4.0\n     */\n    transformCameraUpdate: {\n      type: Function as PropType<CameraUpdateTransformFunction>,\n    },\n    /**\n     * The map's TwoFingersTouchZoomRotateHandler, which allows the user to zoom or rotate the map with touch gestures.\n     * Find more details and examples using `touchZoomRotate` in the TwoFingersTouchZoomRotateHandler section.\n     */\n    touchZoomRotate: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * The map's TwoFingersTouchPitchHandler, which allows the user to pitch the map with touch gestures.\n     * Find more details and examples using `touchPitch` in the TwoFingersTouchPitchHandler section.\n     */\n    touchPitch: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n\n    /**\n     * The initial zoom level of the map. If zoom is not specified in the constructor options, MapLibre GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to 0. Default Value `0`\n     * @vmodel v-model:zoom\n     */\n    zoom: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The maximum number of tiles stored in the tile cache for a given source. If omitted, the cache will be dynamically sized based on the current viewport which can be set using `maxTileCacheZoomLevels` constructor options.\n     * Default value null\n     */\n    maxTileCacheSize: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * The name or symbol to reference a map via useMap composable\n     */\n    mapKey: { type: [String, Symbol] as PropType<string | symbol> },\n    /**\n     * The pixel ratio. The canvas' width attribute will be container.clientWidth * pixelRatio and its height attribute will be container.clientHeight * pixelRatio. Defaults to devicePixelRatio if not specified.\n     */\n    pixelRatio: {\n      type: Number as PropType<number>,\n    },\n    /**\n     * If false, style validation will be skipped. Useful in production environment.\n     * Default value true\n     * @since 6.4.0\n     */\n    validateStyle: {\n      type: Boolean as PropType<boolean>,\n      default: undefined,\n    },\n    /**\n     * The map's {@link CooperativeGesturesHandler}, which allows the user to see cooperative gesture info when user tries to zoom in/out.\n     * Find more details and examples using `cooperativeGestures` in the {@link CooperativeGesturesHandler} section.\n     */\n    cooperativeGestures: {\n      type: Boolean as PropType<boolean>,\n    },\n  },\n  emits: [\n    \"map:error\",\n    \"map:load\",\n    \"map:idle\",\n    \"map:remove\",\n    \"map:render\",\n    \"map:resize\",\n    \"map:webglcontextlost\",\n    \"map:webglcontextrestored\",\n    \"map:dataloading\",\n    \"map:data\",\n    \"map:tiledataloading\",\n    \"map:sourcedataloading\",\n    \"map:styledataloading\",\n    \"map:sourcedata\",\n    \"map:styledata\",\n    \"map:styleimagemissing\",\n    \"map:dataabort\",\n    \"map:sourcedataabort\",\n    \"map:boxzoomcancel\",\n    \"map:boxzoomstart\",\n    \"map:boxzoomend\",\n    \"map:touchcancel\",\n    \"map:touchmove\",\n    \"map:touchend\",\n    \"map:touchstart\",\n    \"map:click\",\n    \"map:contextmenu\",\n    \"map:dblclick\",\n    \"map:mousemove\",\n    \"map:mouseup\",\n    \"map:mousedown\",\n    \"map:mouseout\",\n    \"map:mouseover\",\n    \"map:movestart\",\n    \"map:move\",\n    \"map:moveend\",\n    \"map:zoomstart\",\n    \"map:zoom\",\n    \"map:zoomend\",\n    \"map:rotatestart\",\n    \"map:rotate\",\n    \"map:rotateend\",\n    \"map:dragstart\",\n    \"map:drag\",\n    \"map:dragend\",\n    \"map:pitchstart\",\n    \"map:pitch\",\n    \"map:pitchend\",\n    \"map:wheel\",\n    \"map:terrain\",\n    \"map:cooperativegestureprevented\",\n    \"map:projectiontransition\",\n    /**\n     * Center property updated\n     */\n    \"update:center\",\n    /**\n     * Zoom property updated\n     */\n    \"update:zoom\",\n    /**\n     * Pitch property updated\n     */\n    \"update:pitch\",\n    /**\n     * Bearing property updated\n     */\n    \"update:bearing\",\n  ],\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, ctx) {\n    const component = markRaw(getCurrentInstance()!),\n      container = shallowRef<HTMLDivElement>(),\n      map = shallowRef<MaplibreMap>(),\n      isInitialized = ref(false),\n      isLoaded = ref(false),\n      boundMapEvents = new Map<\n        keyof MapEventType | `__${keyof MapEventType}`,\n        MapEventHandler<keyof MapEventType>\n      >(),\n      registryItem = registerMap(component, map, props.mapKey);\n\n    provide(mapSymbol, map);\n    provide(isLoadedSymbol, isLoaded);\n    provide(isInitializedSymbol, isInitialized);\n    provide(componentIdSymbol, component.uid);\n    provide(sourceIdSymbol, \"\");\n\n    /*\n     * bind prop watchers\n     */\n    watch(\n      () => props.bearing,\n      (v) => {\n        if (v) {\n          map.value?.setBearing(v);\n        }\n      },\n    );\n    watch(\n      () => props.bounds,\n      (v) => {\n        if (v) {\n          map.value?.fitBounds(v, props.fitBoundsOptions);\n        }\n      },\n    );\n    watch(\n      () => props.center,\n      (v) => {\n        const center = map.value?.getCenter();\n        if (v && center && !isLngLatEqual(v, center)) {\n          map.value?.setCenter(v);\n        }\n      },\n    );\n    watch(\n      () => props.maxBounds,\n      (v) => {\n        if (v) {\n          map.value?.setMaxBounds(v);\n        }\n      },\n    );\n    watch(\n      () => props.maxPitch,\n      (v) => {\n        if (v) {\n          map.value?.setMaxPitch(v);\n        }\n      },\n    );\n    watch(\n      () => props.maxZoom,\n      (v) => {\n        if (v) {\n          map.value?.setMaxZoom(v);\n        }\n      },\n    );\n    watch(\n      () => props.minPitch,\n      (v) => {\n        if (v) {\n          map.value?.setMinPitch(v);\n        }\n      },\n    );\n    watch(\n      () => props.minZoom,\n      (v) => {\n        if (v) {\n          map.value?.setMinZoom(v);\n        }\n      },\n    );\n    watch(\n      () => props.pitch,\n      (v) => {\n        if (v) {\n          map.value?.setPitch(v);\n        }\n      },\n    );\n    watch(\n      () => props.renderWorldCopies,\n      (v) => {\n        if (v) {\n          map.value?.setRenderWorldCopies(v);\n        }\n      },\n    );\n    watch(\n      () => props.mapStyle,\n      (v) => {\n        if (v) {\n          map.value?.setStyle(v as StyleSpecification);\n        }\n      },\n    );\n    watch(\n      () => props.transformRequest,\n      (v) => {\n        if (v) {\n          map.value?.setTransformRequest(v);\n        }\n      },\n    );\n    watch(\n      () => props.zoom,\n      (v) => {\n        if (v) {\n          map.value?.setZoom(v);\n        }\n      },\n    );\n    watch(\n      () => props.zoom,\n      (v) => {\n        if (v) {\n          map.value?.setZoom(v);\n        }\n      },\n    );\n\n    function initialize() {\n      registryItem.isMounted = true;\n\n      // build options\n      const opts: typeof props & {\n        style?: string | StyleSpecification;\n        container: HTMLElement;\n      } = { ...props, style: props.mapStyle, container: container.value! };\n\n      for (const opt of Object.keys(opts) as Array<keyof typeof opts>) {\n        if (opts[opt] === undefined) {\n          delete opts[opt];\n        }\n      }\n\n      // init map\n      map.value = markRaw(new MaplibreMap(opts));\n      registryItem.map = map.value;\n      isInitialized.value = true;\n      boundMapEvents.set(\n        \"__load\",\n        () => ((isLoaded.value = true), (registryItem.isLoaded = true)),\n      );\n      map.value.on(\"load\", boundMapEvents.get(\"__load\")!);\n      boundMapEvents.set(\"__moveend\", () =>\n        ctx.emit(\"update:center\", map.value!.getCenter()),\n      );\n      map.value.on(\"moveend\", boundMapEvents.get(\"__moveend\")!);\n      boundMapEvents.set(\"__zoomend\", () =>\n        ctx.emit(\"update:zoom\", map.value!.getZoom()),\n      );\n      map.value.on(\"zoomend\", boundMapEvents.get(\"__zoomend\")!);\n      boundMapEvents.set(\"__pitchend\", () =>\n        ctx.emit(\"update:pitch\", map.value!.getPitch()),\n      );\n      map.value.on(\"pitchend\", boundMapEvents.get(\"__pitchend\")!);\n      boundMapEvents.set(\"__rotateend\", () =>\n        ctx.emit(\"update:bearing\", map.value!.getBearing()),\n      );\n      map.value.on(\"rotateend\", boundMapEvents.get(\"__rotateend\")!);\n\n      // bind events\n      if (component.vnode.props) {\n        for (const event of MAP_EVENT_TYPES) {\n          if (component.vnode.props[\"onMap:\" + event]) {\n            const eventName = `map:${event}`;\n            const handler = createEventHandler<typeof event>(\n              component,\n              map.value,\n              ctx,\n              eventName as MapEvent,\n            );\n            boundMapEvents.set(event, handler);\n            map.value.on(event, handler);\n          }\n        }\n      }\n\n      // automatic re-initialization of map on CONTEXT_LOST_WEBGL\n      map.value.getCanvas().addEventListener(\"webglcontextlost\", restart);\n    }\n\n    async function dispose() {\n      registryItem.isMounted = false;\n      registryItem.isLoaded = false;\n      isLoaded.value = false;\n\n      if (map.value) {\n        // unbind events\n        map.value.getCanvas().removeEventListener(\"webglcontextlost\", restart);\n        isInitialized.value = false;\n        boundMapEvents.forEach((func, en) => {\n          map.value!.off(en.startsWith(\"__\") ? en.substring(2) : en, func);\n        });\n        // destroy map\n        map.value.remove();\n      }\n    }\n\n    function restart() {\n      dispose();\n      nextTick(initialize);\n    }\n\n    /*\n     * init map\n     */\n    onMounted(initialize);\n\n    /*\n     * Dispose component\n     */\n    onBeforeUnmount(dispose);\n\n    ctx.expose({ map });\n\n    return () => [\n      h(\"div\", {\n        ref: container,\n        style: { height: props.height, width: props.width },\n      }),\n      isInitialized.value && ctx.slots.default\n        ? ctx.slots.default({})\n        : undefined,\n    ];\n  },\n\n  /**\n   * Slot for controls, sources, marker and popup\n   * @slot default\n   */\n  render() {\n    return null;\n  },\n});\n","import { type ShallowRef, type WatchSource, watch } from \"vue\";\nimport type { IControl, Map, ControlPosition } from \"maplibre-gl\";\nimport {\n  type Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\n\nexport function usePositionWatcher(\n  source: WatchSource<ControlPosition | undefined>,\n  map: ShallowRef<Map | undefined>,\n  control: IControl,\n) {\n  watch(\n    source,\n    (v) => {\n      if (v && PositionValues.indexOf(v as Position) === -1) {\n        return;\n      }\n      if (map.value?.hasControl(control)) {\n        map.value.removeControl(control);\n      }\n      map.value?.addControl(control, v);\n    },\n    { immediate: true },\n  );\n}\n","import { inject, shallowRef, onBeforeUnmount, type ShallowRef } from \"vue\";\nimport type { Map, IControl, ControlPosition } from \"maplibre-gl\";\nimport { isInitializedSymbol, mapSymbol } from \"@/lib/types\";\nimport { usePositionWatcher } from \"@/lib/composable/usePositionWatcher\";\n\ntype ControlProps = {\n  position?: ControlPosition;\n};\n\n/**\n * Add a control to the map, with position watcher\n */\nexport function useControl<T extends IControl>(\n  fun: () => T,\n  props: ControlProps,\n): { control: ShallowRef<T>; map: ShallowRef<Map | undefined> } {\n  const map = inject(mapSymbol)!;\n  const isInitialized = inject(isInitializedSymbol)!;\n  const control = shallowRef();\n\n  control.value = fun();\n\n  usePositionWatcher(() => props.position, map, control.value);\n\n  onBeforeUnmount(\n    () => isInitialized.value && map.value?.removeControl(control.value),\n  );\n\n  return { control, map };\n}\n","import { defineComponent, type PropType } from \"vue\";\nimport { AttributionControl, type ControlPosition } from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\n\n/**\n * Render Attribution Control\n *\n * See [AttributionControl](https://maplibre.org/maplibre-gl-js/docs/API/classes/AttributionControl/)\n */\nexport default defineComponent({\n  name: \"MglAttributionControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'bottom-right'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * If true, the attribution control will always collapse when moving the map. If false, force the expanded attribution control. The default is a responsive attribution that collapses when the user moves the map on maps less than 640 pixels wide. Attribution should not be collapsed if it can comfortably fit on the map. compact should only be used to modify default attribution when map size makes it impossible to fit default attribution and when the automatic compact resizing for default settings are not sufficient.\n     */\n    compact: Boolean as PropType<boolean>,\n    /**\n     * Attributions to show in addition to any other attributions.\n     */\n    customAttribution: [String, Array] as PropType<string | string[]>,\n  },\n  setup(props) {\n    useControl(() => {\n      return new AttributionControl({\n        compact: props.compact,\n        customAttribution: props.customAttribution,\n      });\n    }, props);\n  },\n  render() {\n    return null;\n  },\n});\n","import type { ControlPosition, IControl } from \"maplibre-gl\";\nimport { nextTick, Ref } from \"vue\";\nimport { Position } from \"@/lib/components/controls/position.enum\";\n\nexport class CustomControl implements IControl {\n  public readonly container: HTMLDivElement;\n\n  constructor(\n    private isAdded: Ref<boolean>,\n    classes: string,\n  ) {\n    this.container = document.createElement(\"div\");\n    this.setClasses(classes);\n  }\n\n  getDefaultPosition(): ControlPosition {\n    return Position.TOP_LEFT;\n  }\n\n  onAdd(): HTMLElement {\n    nextTick(() => (this.isAdded.value = true));\n    return this.container;\n  }\n\n  onRemove(): void {\n    this.isAdded.value = false;\n    this.container.remove();\n  }\n\n  setClasses(classes: string) {\n    this.container.className = classes;\n  }\n}\n","import {\n  createCommentVNode,\n  defineComponent,\n  h,\n  type PropType,\n  ref,\n  type SlotsType,\n  Teleport,\n  watch,\n} from \"vue\";\nimport type { ControlPosition } from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\nimport { CustomControl } from \"@/lib/components/controls/custom\";\n\n/**\n * Render a custom control with your content in the default slot\n */\nexport default defineComponent({\n  name: \"MglCustomControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'top-left'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * Set the classes on the control div\n     * @since 6.1.0\n     */\n    class: {\n      type: String as PropType<string>,\n      default: \"maplibregl-ctrl maplibregl-ctrl-group\",\n    },\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const isAdded = ref(false);\n    const { control } = useControl(() => {\n      return new CustomControl(isAdded, props.class);\n    }, props);\n\n    watch(\n      () => props.class,\n      () => control.value.setClasses(props.class),\n    );\n\n    return () => {\n      if (!isAdded.value) {\n        return createCommentVNode(\"custom-component\");\n      }\n      return h(Teleport, { to: control.value.container }, slots.default?.({}));\n    };\n  },\n  /**\n   * Slot to render the content of the control\n   * @slot default\n   */\n  render() {\n    return null;\n  },\n});\n","import { defineComponent, nextTick, onBeforeUnmount, type PropType } from \"vue\";\nimport { FullscreenControl, type ControlPosition } from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\n\n/**\n * Render Fullscreen Control\n *\n * See [FullscreenControl](https://maplibre.org/maplibre-gl-js/docs/API/classes/FullscreenControl/)\n */\nexport default defineComponent({\n  name: \"MglFullscreenControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'top-right'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * container is the compatible DOM element which should be made full screen. By default, the map container element will be made full screen.\n     */\n    container: {\n      type: Object as PropType<HTMLElement>,\n      default: null,\n    },\n  },\n  setup(props) {\n    const { control, map } = useControl(() => {\n      return new FullscreenControl({\n        container: props.container || undefined,\n      });\n    }, props);\n\n    // fire map.resize just a 2nd time\n    function triggerResize() {\n      nextTick(() => map.value?.resize());\n    }\n\n    control.value.on(\"fullscreenstart\", triggerResize);\n    control.value.on(\"fullscreenend\", triggerResize);\n\n    onBeforeUnmount(() => {\n      control.value.off(\"fullscreenstart\", triggerResize);\n      control.value.off(\"fullscreenend\", triggerResize);\n    });\n  },\n  render() {\n    return null;\n  },\n});\n","import { defineComponent, onBeforeUnmount, type PropType } from \"vue\";\nimport {\n  type FitBoundsOptions,\n  type ControlPosition,\n  GeolocateControl,\n} from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\n\ntype GeolocateControlEvent =\n  | \"trackuserlocationstart\"\n  | \"trackuserlocationend\"\n  | \"userlocationlostfocus\"\n  | \"userlocationfocus\"\n  | \"geolocate\"\n  | \"error\"\n  | \"outofmaxbounds\";\n\n/**\n * Render GeolocateControl\n *\n * See [GeolocateControl](https://maplibre.org/maplibre-gl-js/docs/API/classes/GeolocateControl/)\n */\nexport default defineComponent({\n  name: \"MglGeolocateControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'top-right'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      default: Position.TOP_RIGHT,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * A Geolocation API [PositionOptions](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions) object.\n     */\n    positionOptions: {\n      type: Object as PropType<PositionOptions>,\n      default: () =>\n        ({ enableHighAccuracy: false, timeout: 6000 }) as PositionOptions,\n    },\n    /**\n     * A options object to use when the map is panned and zoomed to the user's location. The default is to use a maxZoom of 15 to limit how far the map will zoom in for very accurate locations.\n     */\n    fitBoundsOptions: {\n      type: Object as PropType<FitBoundsOptions>,\n      default: () => ({ maxZoom: 15 }) as FitBoundsOptions,\n    },\n    /**\n     * If true the GeolocateControl becomes a toggle button and when active the map will receive updates to the user's location as it changes.\n     */\n    trackUserLocation: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    /**\n     * By default, if showUserLocation is true, a transparent circle will be drawn around the user location indicating the accuracy (95% confidence level) of the user's location. Set to false to disable. Always disabled when showUserLocation is false.\n     */\n    showAccuracyCircle: {\n      type: Boolean as PropType<boolean>,\n      default: true,\n    },\n    /**\n     * By default a dot will be shown on the map at the user's location. Set to false to disable.\n     */\n    showUserLocation: {\n      type: Boolean as PropType<boolean>,\n      default: true,\n    },\n  },\n  emits: [\n    \"trackuserlocationstart\",\n    \"trackuserlocationend\",\n    \"userlocationlostfocus\",\n    \"userlocationfocus\",\n    \"geolocate\",\n    \"error\",\n    \"outofmaxbounds\",\n  ],\n  setup(props, ctx) {\n    const { control } = useControl(() => {\n      return new GeolocateControl({\n        positionOptions: props.positionOptions,\n        fitBoundsOptions: props.fitBoundsOptions,\n        trackUserLocation: props.trackUserLocation,\n        showAccuracyCircle: props.showAccuracyCircle,\n        showUserLocation: props.showUserLocation,\n      });\n    }, props);\n    function emitEvent<A>(event: GeolocateControlEvent): void {\n      const fun = (arg: A) => {\n        ctx.emit(event, arg);\n      };\n      control.value.on(event, fun);\n      onBeforeUnmount(() => {\n        control.value.off(event, fun);\n      });\n    }\n    emitEvent<undefined>(\"trackuserlocationstart\");\n    emitEvent<undefined>(\"trackuserlocationend\");\n    emitEvent<undefined>(\"userlocationlostfocus\");\n    emitEvent<undefined>(\"userlocationfocus\");\n    emitEvent<GeolocationPosition>(\"geolocate\");\n    emitEvent<GeolocationPositionError>(\"error\");\n    emitEvent<GeolocationPosition>(\"outofmaxbounds\");\n  },\n  render() {\n    return null;\n  },\n});\n","import { defineComponent, type PropType } from \"vue\";\nimport { NavigationControl, type ControlPosition } from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\n\n/**\n * Render Navigation Control\n *\n * See [NavigationControl](https://maplibre.org/maplibre-gl-js/docs/API/classes/NavigationControl/)\n */\nexport default defineComponent({\n  name: \"MglNavigationControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'top-right'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * If true the compass button is included.\n     */\n    showCompass: { type: Boolean as PropType<boolean>, default: true },\n    /**\n     * If true the zoom-in and zoom-out buttons are included.\n     */\n    showZoom: { type: Boolean as PropType<boolean>, default: true },\n    /**\n     * If true the pitch is visualized by rotating X-axis of compass.\n     */\n    visualizePitch: Boolean as PropType<boolean>,\n  },\n  setup(props) {\n    useControl(() => {\n      return new NavigationControl({\n        showCompass: props.showCompass,\n        showZoom: props.showZoom,\n        visualizePitch: props.visualizePitch,\n      });\n    }, props);\n  },\n  render() {\n    return null;\n  },\n});\n","import { defineComponent, type PropType } from \"vue\";\nimport { ScaleControl, type ControlPosition } from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\n\nexport enum ScaleControlUnit {\n  IMPERIAL = \"imperial\",\n  METRIC = \"metric\",\n  NAUTICAL = \"nautical\",\n}\n\ntype UnitValue = ScaleControlUnit | \"imperial\" | \"metric\" | \"nautical\";\nconst UnitValues = Object.values(ScaleControlUnit);\n\n/**\n * Render Scale Control\n *\n * See [ScaleControl](https://maplibre.org/maplibre-gl-js/docs/API/classes/ScaleControl/)\n */\nexport default defineComponent({\n  name: \"MglScaleControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'bottom-left'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * The maximum length of the scale control in pixels. Default Value `100`\n     */\n    maxWidth: { type: Number as PropType<number>, default: 100 },\n    /**\n     * Set the scale's unit of the distance ('imperial', 'metric' or 'nautical').\n     */\n    unit: {\n      type: String as PropType<UnitValue>,\n      default: ScaleControlUnit.METRIC,\n      validator: (v: ScaleControlUnit) => {\n        return UnitValues.indexOf(v) !== -1;\n      },\n    },\n  },\n  setup(props) {\n    useControl(() => {\n      return new ScaleControl({\n        maxWidth: props.maxWidth,\n        unit: props.unit,\n      });\n    }, props);\n  },\n  render() {\n    return null;\n  },\n});\n","import { defineComponent, type PropType } from \"vue\";\nimport { LogoControl, type ControlPosition } from \"maplibre-gl\";\nimport {\n  Position,\n  PositionValues,\n} from \"@/lib/components/controls/position.enum\";\nimport { useControl } from \"@/lib/composable/useControl\";\n\n/**\n * Render Logo Control\n *\n * See [LogoControl](https://maplibre.org/maplibre-gl-js/docs/API/classes/LogoControl/)\n * @since 6.2.0\n */\nexport default defineComponent({\n  name: \"MglLogoControl\",\n  props: {\n    /**\n     * Position on the map to which the control will be added. Valid values are 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Defaults to 'bottom-left'.\n     */\n    position: {\n      type: String as PropType<ControlPosition>,\n      validator: (v: Position) => {\n        return PositionValues.indexOf(v) !== -1;\n      },\n    },\n    /**\n     * If true, force a compact logo. If false, force the full logo. The default is a responsive logo that collapses when the map is less than 640 pixels wide.\n     */\n    compact: {\n      type: Boolean as PropType<boolean>,\n    },\n  },\n  setup(props) {\n    useControl(() => {\n      return new LogoControl({\n        compact: props.compact,\n      });\n    }, props);\n  },\n  render() {\n    return null;\n  },\n});\n","import {\n  defineComponent,\n  inject,\n  provide,\n  onMounted,\n  onBeforeUnmount,\n  type PropType,\n  ref,\n  watch,\n  shallowRef,\n  h,\n} from \"vue\";\nimport {\n  type LngLatLike,\n  Marker,\n  type PointLike,\n  type PositionAnchor,\n  type Event\n} from \"maplibre-gl\";\nimport { mapSymbol, markerSymbol } from \"@/lib/types\";\n\n/**\n * Creates a marker component\n *\n * See [Marker](https://maplibre.org/maplibre-gl-js/docs/API/classes/Marker).\n */\nexport default defineComponent({\n  name: \"MglMarker\",\n  emits: [\n    /**\n     * Fired when dragging starts\n     */\n    \"dragstart\",\n    /**\n     * Fired while dragging\n     */\n    \"drag\",\n    /**\n     * Fired when the marker is finished being dragged\n     */\n    \"dragend\",\n    /**\n     * Fired when the coordinates have been updated when the marker is draggable\n     *\n     * @property {LgnLatLike} coordinates the new coordinates\n     */\n    \"update:coordinates\",\n  ],\n  props: {\n    /**\n     * Marker coordinates\n     */\n    coordinates: {\n      type: [Object, Array] as unknown as PropType<LngLatLike>,\n      required: true,\n    },\n    /**\n     * Space-separated CSS class names to add to marker container\n     * @since 8.3.0\n     */\n    className: String as PropType<string>,\n    /**\n     * The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up.\n     */\n    offset: [Object, Array] as PropType<PointLike>,\n    /**\n     * A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker#setLngLat. Options are 'center', 'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', and 'bottom-right'. Default Value 'center'\n     */\n    anchor: String as PropType<PositionAnchor>,\n    /**\n     * The color to use for the default marker if options.element is not provided. The default is light blue. Default Value '#3FB1CE'\n     */\n    color: String as PropType<string>,\n    /**\n     * A boolean indicating whether or not a marker is able to be dragged to a new position on the map. Default Value false\n     */\n    draggable: Boolean as PropType<boolean>,\n    /**\n     * The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click (as opposed to a marker drag). The default is to inherit map's clickTolerance. Default Value 0\n     */\n    clickTolerance: Number as PropType<number>,\n    /**\n     * The rotation angle of the marker in degrees, relative to its respective rotationAlignment setting. A positive value will rotate the marker clockwise. Default Value 0\n     */\n    rotation: Number as PropType<number>,\n    /**\n     * map aligns the Marker's rotation relative to the map, maintaining a bearing as the map rotates. viewport aligns the Marker's rotation relative to the viewport, agnostic to map rotations. auto is equivalent to viewport. Default Value 'auto'\n     */\n    rotationAlignment: String as PropType<\"map\" | \"viewport\" | \"auto\">,\n    /**\n     * map aligns the Marker to the plane of the map. viewport aligns the Marker to the plane of the viewport. auto automatically matches the value of rotationAlignment. Default Value 'auto'\n     */\n    pitchAlignment: String as PropType<\"map\" | \"viewport\" | \"auto\">,\n    /**\n     * The scale to use for the default marker if options.element is not provided. The default scale corresponds to a height of 41px and a width of 27px. Default Value 1\n     */\n    scale: Number as PropType<number>,\n    /**\n     * Marker's opacity when it's in clear view (not behind 3d terrain). Default value `1`\n     * @since 7.0.0\n     */\n    opacity: String as PropType<string>,\n    /**\n     * Marker's opacity when it's behind 3d terrain\n     * @defaultValue `0.2`\n     * @since 7.0.0\n     */\n    opacityWhenCovered: String as PropType<string>,\n    /**\n     * If true, rounding is disabled for placement of the marker, allowing for subpixel positioning and smoother movement when the marker is translated.\n     * @since 7.5.0\n     */\n    subpixelPositioning: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n  },\n  setup(props, { slots, emit }) {\n    const map = inject(mapSymbol)!,\n      marker = shallowRef<Marker>(),\n      markerRoot = ref(),\n      isMounted = ref(false),\n      boundEvents = new Map();\n\n    function emitEvent(\n      eventName: \"dragstart\" | \"drag\" | \"dragend\",\n      additionalCb?: () => void,\n    ) {\n      const fn = (e: Event) => {\n        if (additionalCb) additionalCb();\n        emit(eventName, e);\n      };\n      marker.value!.on(eventName, fn);\n      boundEvents.set(eventName, fn);\n    }\n\n    provide(markerSymbol, marker);\n\n    onMounted(() => {\n      const opts: typeof props & { element?: HTMLElement } = { ...props };\n      if (slots.marker) {\n        opts.element = markerRoot.value!;\n      }\n      marker.value = new Marker(opts);\n      marker.value.setLngLat(props.coordinates).addTo(map.value!);\n\n      emitEvent(\"dragstart\");\n      emitEvent(\"drag\", () => {\n        emit(\"update:coordinates\", marker.value?.getLngLat());\n      });\n      emitEvent(\"dragend\", () => {\n        emit(\"update:coordinates\", marker.value?.getLngLat());\n      });\n\n      isMounted.value = true;\n    });\n\n    watch(\n      () => props.coordinates,\n      (v) => marker.value?.setLngLat(v),\n      { deep: true },\n    );\n    watch(\n      () => props.draggable,\n      (v) => marker.value?.setDraggable(v),\n    );\n    watch(\n      () => props.offset,\n      (v) => marker.value?.setOffset(v || [0, 0]),\n    );\n    watch(\n      () => props.pitchAlignment,\n      (v) => marker.value?.setPitchAlignment(v || \"auto\"),\n    );\n    watch(\n      () => props.rotation,\n      (v) => marker.value?.setRotation(v),\n    );\n    watch(\n      () => props.rotationAlignment,\n      (v) => marker.value?.setRotationAlignment(v || \"auto\"),\n    );\n    watch(\n      () => props.opacity,\n      (v) => marker.value?.setOpacity(v, props.opacityWhenCovered),\n    );\n    watch(\n      () => props.opacityWhenCovered,\n      (v) => marker.value?.setOpacity(props.opacity, v),\n    );\n    watch(\n      () => props.subpixelPositioning,\n      (v) => marker.value?.setSubpixelPositioning(v),\n    );\n    watch(\n      () => props.className,\n      (value, previous) => {\n        if (previous) {\n          marker.value?.removeClassName(previous);\n        }\n        if (value) {\n          marker.value?.addClassName(value);\n        }\n      },\n    );\n\n    onBeforeUnmount(() => {\n      boundEvents.forEach((fn, eventName) => {\n        marker.value?.off(eventName, fn);\n      });\n      marker.value?.remove();\n    });\n\n    return () => [\n      h(\n        \"div\",\n        slots.default && isMounted.value ? slots.default({}) : undefined,\n      ),\n      h(\"div\", { ref: markerRoot }, slots.marker ? slots.marker() : undefined),\n    ];\n  },\n\n  /**\n   * Slot for popup component\n   * @slot default\n   */\n  /**\n   * Slot for custom marker\n   * @slot marker\n   */\n  render() {\n    return null;\n  },\n});\n","import {\n  defineComponent,\n  inject,\n  onMounted,\n  type PropType,\n  onBeforeUnmount,\n  watch,\n  ref,\n  h,\n} from \"vue\";\nimport {\n  type LngLatLike,\n  Popup,\n  type Offset,\n  type PositionAnchor,\n} from \"maplibre-gl\";\nimport { mapSymbol, markerSymbol } from \"@/lib/types\";\n\n/**\n * A popup component\n *\n * See [Popup](https://maplibre.org/maplibre-gl-js/docs/API/classes/Popup/).\n */\nexport default defineComponent({\n  name: \"MglPopup\",\n  emits: [\n    /**\n     * Fired when the popup is opened manually or programmatically.\n     */\n    \"open\",\n    /**\n     * Fired when the popup is closed manually or programmatically.\n     */\n    \"close\",\n  ],\n  props: {\n    /**\n     * The geographical location of the popup's anchor.\n     * Unused when placed inside a marker.\n     */\n    coordinates: {\n      type: [Object, Array] as unknown as PropType<LngLatLike>,\n      required: false,\n    },\n    /**\n     * Display a close button in the top right corner.\n     */\n    closeButton: {\n      type: Boolean as PropType<boolean>,\n      required: false,\n      default: true,\n    },\n    /**\n     * The popup will be closed when the map is clicked.\n     */\n    closeOnClick: {\n      type: Boolean as PropType<boolean>,\n      required: false,\n      default: true,\n    },\n    /**\n     * The popup will be closed when the map moves.\n     */\n    closeOnMove: {\n      type: Boolean as PropType<boolean>,\n      required: false,\n      default: false,\n    },\n    /**\n     * The popup will try to focus the first focusable element inside the popup.\n     */\n    focusAfterOpen: {\n      type: Boolean as PropType<boolean>,\n      required: false,\n      default: true,\n    },\n    /**\n     * A string indicating the part of the Popup that should\n     * be positioned closest to the coordinate.\n     * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`,\n     * `'top-right'`, `'bottom-left'`, and `'bottom-right'`. If unset the anchor will be\n     * dynamically set to ensure the popup falls within the map container with a preference\n     * for `'bottom'`.\n     */\n    anchor: {\n      type: String as PropType<PositionAnchor>,\n      required: false,\n    },\n    /**\n     * A pixel offset applied to the popup's location\n     */\n    offset: {\n      type: [Number, Object, Array] as PropType<Offset>,\n      required: false,\n    },\n    /**\n     * Space-separated CSS class names to add to popup container\n     */\n    className: {\n      type: String as PropType<string>,\n      required: false,\n    },\n    /**\n     * A string that sets the CSS property of the popup's maximum width, eg `'300px'`.\n     * To ensure the popup resizes to fit its content, set this property to `'none'`.\n     */\n    maxWidth: {\n      type: String as PropType<string>,\n      default: \"240px\",\n    },\n    /**\n     * If true, rounding is disabled for placement of the popup, allowing for subpixel positioning and smoother movement when the popup is translated.\n     * @since 7.1.0\n     */\n    subpixelPositioning: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    /**\n     * Sets the popup's content to a string of text.\n     */\n    text: {\n      type: String as PropType<string>,\n      required: false,\n    },\n  },\n  setup(props, { slots, emit, expose }) {\n    const map = inject(mapSymbol);\n    const marker = inject(markerSymbol, undefined);\n    const root = ref();\n\n    const popup = new Popup(props);\n\n    if (marker && marker.value) {\n      marker.value.setPopup(popup);\n    } else if (props.coordinates && map) {\n      popup.setLngLat(props.coordinates).addTo(map.value!);\n    }\n\n    if (props.text) {\n      popup.setText(props.text);\n    }\n\n    function emitEvent(eventName: \"close\" | \"open\") {\n      const fn = () => emit(eventName);\n      popup.on(eventName, fn);\n      onBeforeUnmount(() => {\n        popup.off(eventName, fn);\n      });\n    }\n\n    emitEvent(\"open\");\n    emitEvent(\"close\");\n\n    expose({\n      remove() {\n        popup.remove();\n      },\n    });\n\n    watch(\n      () => props.coordinates,\n      (v) => {\n        if (v) {\n          popup.setLngLat(v);\n        }\n      },\n      { deep: true },\n    );\n    watch(\n      () => props.text,\n      (v) => popup.setText(v || \"\"),\n    );\n    watch(\n      () => props.offset,\n      (v) => popup.setOffset(v),\n    );\n    watch(\n      () => props.maxWidth,\n      (v) => popup.setMaxWidth(v),\n    );\n    watch(\n      () => props.className,\n      (value, previous) => {\n        if (previous) {\n          popup.removeClassName(previous);\n        }\n        if (value) {\n          popup.addClassName(value);\n        }\n      },\n    );\n    watch(\n      () => props.subpixelPositioning,\n      (v) => popup.setSubpixelPositioning(v),\n    );\n\n    onMounted(() => {\n      if (root.value && !props.text) {\n        popup.setDOMContent(root.value!);\n      }\n    });\n\n    onBeforeUnmount(() => {\n      popup.remove();\n    });\n\n    return () => [\n      h(\"div\", { ref: root }, slots.default ? slots.default() : undefined),\n    ];\n  },\n  /**\n   * Slot for popup content\n   * @slot default\n   */\n  render() {\n    return null;\n  },\n});\n","import { defineComponent, inject, type PropType, warn } from \"vue\";\nimport { type StyleImageInterface, type StyleImageMetadata } from \"maplibre-gl\";\nimport { mapSymbol } from \"@/lib/types\";\n\n/**\n * Load an image to maplibre to use in the style.\n * If the image id already exist, nothing is done.\n *\n * See [#addImage](https://maplibre.org/maplibre-gl-js/docs/API/classes/Map/#addimage) and [#loadImage](https://maplibre.org/maplibre-gl-js/docs/API/classes/Map/#loadimage)\n * @since 8.2.0\n */\nexport default defineComponent({\n  name: \"MglImage\",\n  props: {\n    /**\n     * Image id\n     */\n    id: {\n      type: String as unknown as PropType<string>,\n      required: true,\n    },\n    /**\n     * The image data to add\n     * The image as an HTMLImageElement, ImageData, ImageBitmap or object with width, height, and data properties with the same format as ImageData.\n     * Required if the url props is not set\n     */\n    image: Object as PropType<\n      | HTMLImageElement\n      | ImageBitmap\n      | ImageData\n      | {\n          width: number;\n          height: number;\n          data: Uint8Array | Uint8ClampedArray;\n        }\n      | StyleImageInterface\n    >,\n    /**\n     * The image url to load via map#loadImage\n     * Required if the image props is not set\n     */\n    url: String as PropType<string>,\n    /**\n     * The options\n     */\n    options: Object as PropType<Partial<StyleImageMetadata>>,\n  },\n  setup(props) {\n    const map = inject(mapSymbol);\n    if (!props.url && !props.image) {\n      warn(`${props.id} image: missing prop url or image`);\n      return () => [];\n    }\n    if (map!.value!.hasImage(props.id)) return;\n    (async () => {\n      let image = props.image;\n      if (props.url) {\n        image = (await map!.value!.loadImage(props.url)).data;\n      }\n      map!.value!.addImage(props.id, image!, props.options);\n    })();\n\n    return () => [];\n  },\n});\n","export type SourceLayerRegistryHandler = () => void;\n\nexport class SourceLayerRegistry {\n  private unmountHandlers = new Map<string, SourceLayerRegistryHandler>();\n\n  registerUnmountHandler(id: string, handler: SourceLayerRegistryHandler) {\n    this.unmountHandlers.set(id, handler);\n  }\n\n  unregisterUnmountHandler(id: string) {\n    this.unmountHandlers.delete(id);\n  }\n\n  unmount() {\n    this.unmountHandlers.forEach((h) => h());\n  }\n}\n","import { ref, type Ref } from \"vue\";\nimport type { Source, SourceSpecification } from \"maplibre-gl\";\nimport { SourceOptionProps } from \"@/lib/types\";\n\nexport class SourceLib {\n  private static readonly REFS = new Map<\n    string,\n    Ref<Source | undefined | null>\n  >();\n\n  static genSourceOpts(opts: SourceOptionProps): SourceSpecification {\n    const newOpts = { ...opts };\n    for (const opt of Object.keys(newOpts) as Array<keyof SourceOptionProps>) {\n      if (newOpts[opt] === undefined || opt === \"sourceId\") {\n        delete newOpts[opt];\n      }\n    }\n    return newOpts;\n  }\n\n  static getSourceRef<T extends Source>(\n    mcid: number,\n    source: string | Source | undefined,\n  ): Ref<T | undefined | null> {\n    const isString = typeof source === \"string\",\n      key = String(mcid) + (isString ? source : \"\");\n    let r = SourceLib.REFS.get(key);\n    if (!r) {\n      r = ref(isString ? null : undefined);\n      SourceLib.REFS.set(key, r);\n    }\n    return r as Ref<T | undefined | null>;\n  }\n}\n","import { inject, onBeforeUnmount, type Ref, watch } from \"vue\";\nimport type { Source } from \"maplibre-gl\";\nimport { isLoadedSymbol, mapSymbol, SourceOptionProps } from \"@/lib/types\";\nimport type { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\n\nexport function useSource(\n  source: Ref<Source | undefined | null>,\n  props: SourceOptionProps,\n  registry: SourceLayerRegistry,\n) {\n  const map = inject(mapSymbol)!,\n    isLoaded = inject(isLoadedSymbol)!;\n\n  function addSource() {\n    if (isLoaded.value && !map.value?.getSource(props.sourceId)) {\n      map.value!.addSource(props.sourceId, SourceLib.genSourceOpts(props));\n      source.value = map.value!.getSource(props.sourceId);\n    }\n  }\n\n  watch(isLoaded, addSource, { immediate: true });\n  map.value!.on(\"styledata\", addSource);\n\n  return onBeforeUnmount(() => {\n    if (isLoaded.value && !!map.value?.getSource(props.sourceId)) {\n      registry.unmount();\n      map.value!.removeSource(props.sourceId);\n    }\n    map.value!.off(\"styledata\", addSource);\n    source.value = undefined;\n  });\n}\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  isRef,\n  type PropType,\n  provide,\n  type SlotsType,\n  watch,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n  SourceOptionProps,\n} from \"@/lib/types\";\nimport type { CanvasSource, Coordinates } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\n/**\n * See [CanvasSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/CanvasSource/)\n */\nexport default defineComponent({\n  name: \"MglCanvasSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    coordinates: Array as unknown as PropType<Coordinates>,\n    animate: Boolean as PropType<boolean>,\n    canvas: [Object, String] as PropType<HTMLCanvasElement | string>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<CanvasSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"canvas\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    watch(\n      [\n        isRef(props.coordinates) ? props.coordinates : () => props.coordinates,\n        source,\n      ],\n      ([v, src]) => {\n        src?.setCoordinates(v as Coordinates);\n      },\n      { immediate: true },\n    );\n\n    return () => [\n      createCommentVNode(\"Canvas Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  isRef,\n  type PropType,\n  provide,\n  type SlotsType,\n  watch,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n  SourceOptionProps,\n} from \"@/lib/types\";\nimport type { GeoJSONSource, PromoteIdSpecification } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\ntype DataType = GeoJSON.GeoJSON | string;\n\n/**\n * See [GeoJSONSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/GeoJSONSource/)\n */\nexport default defineComponent({\n  name: \"MglGeoJsonSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    data: {\n      type: [Object, String] as PropType<DataType>,\n      required: true,\n    },\n    maxzoom: Number as PropType<number>,\n    attribution: String as PropType<string>,\n    buffer: Number as PropType<number>,\n    tolerance: Number as PropType<number>,\n    cluster: Boolean as PropType<boolean>,\n    clusterRadius: Number as PropType<number>,\n    clusterMaxZoom: Number as PropType<number>,\n    clusterMinPoints: Number as PropType<number>,\n    clusterProperties: Object as PropType<unknown>,\n    lineMetrics: Boolean as PropType<boolean>,\n    generateId: Boolean as PropType<boolean>,\n    promoteId: [Object, String] as PropType<PromoteIdSpecification>,\n    filter: [Array, String, Object] as PropType<unknown>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<GeoJSONSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"geojson\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    watch(\n      [isRef(props.data) ? props.data : () => props.data, source],\n      ([v, src]) => {\n        if (src?.loaded()) {\n          src?.setData(\n            (v as DataType) || { type: \"FeatureCollection\", features: [] },\n          );\n        }\n      },\n      { immediate: true },\n    );\n\n    return () => [\n      createCommentVNode(\"GeoJSON Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  isRef,\n  type PropType,\n  provide,\n  type SlotsType,\n  watch,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n  SourceOptionProps,\n} from \"@/lib/types\";\nimport type { Coordinates, ImageSource } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\n/**\n * See [ImageSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/ImageSource/)\n */\nexport default defineComponent({\n  name: \"MglImageSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    url: String as PropType<string>,\n    coordinates: Array as unknown as PropType<Coordinates>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<ImageSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"image\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    watch(\n      [\n        isRef(props.coordinates) ? props.coordinates : () => props.coordinates,\n        source,\n      ],\n      ([v, src]) => {\n        src?.setCoordinates(v as Coordinates);\n      },\n      { immediate: true },\n    );\n\n    return () => [\n      createCommentVNode(\"Image Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  type PropType,\n  provide,\n  type SlotsType,\n} from \"vue\";\nimport {\n  SourceOptionProps,\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n} from \"@/lib/types\";\nimport type { RasterTileSource } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\n/**\n * See [RasterTileSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/RasterTileSource/)\n */\nexport default defineComponent({\n  name: \"MglRasterSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    url: String as PropType<string>,\n    tiles: Array as PropType<string[]>,\n    bounds: Array as PropType<number[]>,\n    minzoom: Number as PropType<number>,\n    maxzoom: Number as PropType<number>,\n    tileSize: Number as PropType<number>,\n    scheme: String as PropType<\"xyz\" | \"tms\">,\n    attribution: String as PropType<string>,\n    volatile: Boolean as PropType<boolean>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<RasterTileSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"raster\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    return () => [\n      createCommentVNode(\"Raster Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  type PropType,\n  provide,\n  type SlotsType,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n  SourceOptionProps,\n} from \"@/lib/types\";\nimport type { RasterDEMTileSource } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\n/**\n * See [RasterDEMTileSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/RasterDEMTileSource/)\n */\nexport default defineComponent({\n  name: \"MglRasterDemSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    url: String as PropType<string>,\n    tiles: Array as PropType<string[]>,\n    bounds: Array as PropType<number[]>,\n    minzoom: Number as PropType<number>,\n    maxzoom: Number as PropType<number>,\n    tileSize: Number as PropType<number>,\n    attribution: String as PropType<string>,\n    encoding: String as PropType<\"terrarium\" | \"mapbox\" | \"custom\">,\n    volatile: Boolean as PropType<boolean>,\n    redFactor: Number as PropType<number>,\n    blueFactor: Number as PropType<number>,\n    greenFactor: Number as PropType<number>,\n    baseShift: Number as PropType<number>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<RasterDEMTileSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"raster-dem\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    return () => [\n      createCommentVNode(\"RasterDem Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  isRef,\n  type PropType,\n  provide,\n  type SlotsType,\n  watch,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n  SourceOptionProps,\n} from \"@/lib/types\";\nimport type { PromoteIdSpecification, VectorTileSource } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\n/**\n * See [VectorTileSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/VectorTileSource/)\n */\nexport default defineComponent({\n  name: \"MglVectorSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    url: String as PropType<string>,\n    tiles: Array as PropType<string[]>,\n    bounds: {\n      type: Array as PropType<number[]>,\n      validator: function (v: number[]) {\n        return v.length === 4;\n      },\n    },\n    scheme: String as PropType<\"xyz\" | \"tms\">,\n    minzoom: Number as PropType<number>,\n    maxzoom: Number as PropType<number>,\n    attribution: String as PropType<string>,\n    promoteId: [Object, String] as PropType<PromoteIdSpecification>,\n    volatile: Boolean as PropType<boolean>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<VectorTileSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"vector\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    watch(\n      [isRef(props.tiles) ? props.tiles : () => props.tiles, source],\n      ([v, src]) => {\n        if (src?.loaded()) {\n          src.setTiles((v as string[]) || []);\n        }\n      },\n      { immediate: true },\n    );\n    watch(\n      [isRef(props.url) ? props.url : () => props.url, source],\n      ([v, src]) => {\n        if (src?.loaded()) {\n          src.setUrl((v as string) || \"\");\n        }\n      },\n      { immediate: true },\n    );\n\n    return () => [\n      createCommentVNode(\"Vector Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  isRef,\n  type PropType,\n  provide,\n  type SlotsType,\n  watch,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  sourceIdSymbol,\n  sourceLayerRegistry,\n  SourceOptionProps,\n} from \"@/lib/types\";\nimport type { Coordinates, VideoSource } from \"maplibre-gl\";\nimport { SourceLayerRegistry } from \"@/lib/lib/sourceLayer.registry\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\nimport { useSource } from \"@/lib/composable/useSource\";\n\n/**\n * See [VideoSource](https://maplibre.org/maplibre-gl-js/docs/API/classes/VideoSource/)\n */\nexport default defineComponent({\n  name: \"MglVideoSource\",\n  props: {\n    sourceId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    urls: Array as PropType<string[]>,\n    coordinates: Array as unknown as PropType<Coordinates>,\n  },\n  slots: Object as SlotsType<{ default: unknown }>,\n  setup(props, { slots }) {\n    const cid = inject(componentIdSymbol)!,\n      source = SourceLib.getSourceRef<VideoSource>(cid, props.sourceId),\n      registry = new SourceLayerRegistry(),\n      opts = { ...props, type: \"video\" };\n\n    provide(sourceIdSymbol, props.sourceId);\n    provide(sourceLayerRegistry, registry);\n\n    useSource(source, opts as SourceOptionProps, registry);\n\n    watch(\n      [\n        isRef(props.coordinates) ? props.coordinates : () => props.coordinates,\n        source,\n      ],\n      ([v, src]) => {\n        src?.setCoordinates(v as Coordinates);\n      },\n      { immediate: true },\n    );\n\n    return () => [\n      createCommentVNode(\"Video Source\"),\n      source.value && slots.default ? slots.default({}) : undefined,\n    ];\n  },\n});\n","import type {\n  CircleLayerSpecification,\n  FillExtrusionLayerSpecification,\n  FillLayerSpecification,\n  HeatmapLayerSpecification,\n  HillshadeLayerSpecification,\n  LineLayerSpecification,\n  RasterLayerSpecification,\n  SymbolLayerSpecification,\n  Map,\n  MapLayerEventType,\n  BackgroundLayerSpecification,\n} from \"maplibre-gl\";\nimport { type PropType, type VNode } from \"vue\";\n\nexport type LayersWithSource =\n  | FillLayerSpecification\n  | LineLayerSpecification\n  | SymbolLayerSpecification\n  | CircleLayerSpecification\n  | HeatmapLayerSpecification\n  | FillExtrusionLayerSpecification\n  | RasterLayerSpecification\n  | HillshadeLayerSpecification;\n\nexport type LayersWithoutSource = BackgroundLayerSpecification;\n\nexport type AddedProperties = {\n  layerId: string;\n  sourceLayer?: string;\n  source?: string;\n  before?: string;\n}\n\nexport type LayerProps<T extends LayersWithSource> = AddedProperties & Omit<T, \"source\" | \"source-layer\" | \"id\" | \"type\">\n\nexport type LayerEventType = keyof MapLayerEventType\n\nexport const LAYER_EVENTS: Array<LayerEventType> = [\n  \"click\",\n  \"dblclick\",\n  \"mousedown\",\n  \"mouseup\",\n  \"mousemove\",\n  \"mouseenter\",\n  \"mouseleave\",\n  \"mouseover\",\n  \"mouseout\",\n  \"contextmenu\",\n  \"touchstart\",\n  \"touchend\",\n  \"touchcancel\",\n] as const;\n\nexport type LayerPropTypeNaive<T extends LayersWithSource> = {\n  [K in keyof LayerProps<T>]: { type: PropType<LayerProps<T>[K]>, required?: boolean | undefined }\n}\n\nexport type LayerPropTypeAdded<T extends LayersWithSource> = {\n  layerId: { type: PropType<T['id']> },\n  sourceLayer: { type: PropType<T['source-layer']> },\n  before: { type: PropType<string> },\n  source: { type: PropType<T['source']> }\n}\n\nexport type LayerPropType<T extends LayersWithSource> = LayerPropTypeNaive<T> & LayerPropTypeAdded<T>\n\nexport function layerProps<\n  T extends LayersWithSource,\n>() {\n  return {\n    /**\n     * The id of the layer\n     */\n    layerId: {\n      type: String as PropType<T['id']>,\n      required: true,\n    },\n    source: {\n      type: String as PropType<T['source']>\n    },\n    /**\n     * Arbitrary properties useful to track with the layer, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'maplibre:'.\n     */\n    metadata: {\n      type: [Object, Array, String, Number] as PropType<T['metadata']>\n    },\n    /**\n     * Layer to use from a vector tile source. Required for vector tile sources; prohibited for all other source types, including GeoJSON sources.\n     */\n    sourceLayer: { type: String as PropType<T['source-layer']> },\n    /**\n     * The minimum zoom level for the layer. At zoom levels less than the minzoom, the layer will be hidden.\n     */\n    minzoom: { type: Number as PropType<T['minzoom']> },\n    /**\n     * The maximum zoom level for the layer. At zoom levels equal to or greater than the maxzoom, the layer will be hidden.\n     */\n    maxzoom: { type: Number as PropType<T['maxzoom']> },\n    /**\n     * A expression specifying conditions on source features. Only features that match the filter are displayed. Zoom expressions in filters are only evaluated at integer zoom levels. The feature-state expression is not supported in filter expressions.\n     */\n    filter: { type: Object as PropType<T['filter']> },\n    /**\n     * The ID of an existing layer to insert the new layer before, resulting in the new layer appearing visually beneath the existing layer. If this argument is not specified, the layer will be appended to the end of the layers array and appear visually above all other layers.\n     */\n    before: { type: String as PropType<string> },\n    /**\n     * Layout properties for the layer.\n     * See https://maplibre.org/maplibre-style-spec/layers/\n     */\n    layout: { type: Object as PropType<T[\"layout\"]> },\n    /**\n     * Default paint properties for this layer.\n     * See https://maplibre.org/maplibre-style-spec/layers/\n     */\n    paint: { type: Object as PropType<T[\"paint\"]> },\n  };\n}\n\nexport function genLayerOpts<T extends LayersWithSource>(\n  id: string,\n  type: string,\n  props: LayerProps<T>,\n  source: string | undefined,\n): T {\n  const opts = {\n    id,\n    type,\n    source: props.source || source,\n    metadata: props.metadata,\n    minzoom: props.minzoom,\n    maxzoom: props.maxzoom,\n    \"source-layer\": props.sourceLayer,\n    filter: props.filter,\n    paint: props.paint,\n    layout: props.layout,\n  } as T;\n  for (const opt of Object.keys(opts) as Array<keyof T>) {\n    if (opts[opt] === undefined) {\n      delete opts[opt];\n    }\n  }\n  return opts;\n}\n\nexport function registerLayerEvents(map: Map, layerId: string, vn: VNode) {\n  if (!vn.props) {\n    return;\n  }\n\n  for (const eventName of LAYER_EVENTS) {\n    const evProp =\n      \"on\" + eventName.charAt(0).toUpperCase() + eventName.substr(1);\n    if (vn.props[evProp]) {\n      map.on(eventName, layerId, vn.props[evProp]);\n    }\n  }\n}\n\nexport function unregisterLayerEvents(map: Map, layerId: string, vn: VNode) {\n  if (!vn.props) {\n    return;\n  }\n\n  for (const eventName of LAYER_EVENTS) {\n    const evProp =\n      \"on\" + eventName.charAt(0).toUpperCase() + eventName.substr(1);\n    if (vn.props[evProp]) {\n      map.off(eventName, layerId, vn.props[evProp]);\n    }\n  }\n}\n","import { inject, onBeforeUnmount, type ComponentInternalInstance } from \"vue\";\nimport { unregisterLayerEvents } from \"@/lib/lib/layer.lib\";\nimport { isLoadedSymbol, mapSymbol, sourceLayerRegistry } from \"@/lib/types\";\n\nexport function useDisposableLayer(\n  layerId: string,\n  ci?: ComponentInternalInstance,\n) {\n  const map = inject(mapSymbol)!,\n    isLoaded = inject(isLoadedSymbol)!,\n    registry = inject(sourceLayerRegistry)!;\n\n  function removeLayer() {\n    if (isLoaded.value) {\n      if (ci) {\n        unregisterLayerEvents(map.value!, layerId, ci.vnode);\n      }\n      const layer = map.value!.getLayer(layerId);\n      if (layer) {\n        map.value!.removeLayer(layerId);\n      }\n    }\n  }\n\n  registry.registerUnmountHandler(layerId, removeLayer);\n  onBeforeUnmount(() => {\n    registry.unregisterUnmountHandler(layerId);\n    removeLayer();\n  });\n}\n","import type { BackgroundLayerSpecification } from \"maplibre-gl\";\nimport {\n  createCommentVNode,\n  defineComponent,\n  inject,\n  type PropType,\n  watch,\n} from \"vue\";\nimport { isLoadedSymbol, mapSymbol } from \"@/lib/types\";\nimport { LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useDisposableLayer } from \"@/lib/composable/useDisposableLayer\";\n\n/**\n * Background Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglBackgroundLayer\",\n  props: {\n    /**\n     * The id of the layer\n     */\n    layerId: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    /**\n     * Arbitrary properties useful to track with the layer, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'maplibre:'.\n     */\n    metadata: [Object, Array, String, Number] as PropType<unknown>,\n    /**\n     * The minimum zoom level for the layer. At zoom levels less than the minzoom, the layer will be hidden.\n     */\n    minzoom: Number as PropType<number>,\n    /**\n     * The maximum zoom level for the layer. At zoom levels equal to or greater than the maxzoom, the layer will be hidden.\n     */\n    maxzoom: Number as PropType<number>,\n    /**\n     * The ID of an existing layer to insert the new layer before, resulting in the new layer appearing visually beneath the existing layer. If this argument is not specified, the layer will be appended to the end of the layers array and appear visually above all other layers.\n     */\n    before: String as PropType<string>,\n    /**\n     * Layout properties for the layer.\n     * See https://maplibre.org/maplibre-style-spec/layers/#background\n     */\n    layout: Object as PropType<BackgroundLayerSpecification[\"layout\"]>,\n    /**\n     * Default paint properties for this layer.\n     * See https://maplibre.org/maplibre-style-spec/layers/#background\n     */\n    paint: Object as PropType<BackgroundLayerSpecification[\"paint\"]>,\n  },\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props) {\n    const map = inject(mapSymbol)!;\n    const isLoaded = inject(isLoadedSymbol)!;\n\n    useDisposableLayer(props.layerId!);\n\n    watch(\n      () => props.layout,\n      (layout) => {\n        if (layout) {\n          for (const [property, value] of Object.entries(layout)) {\n            map.value!.setLayoutProperty(props.layerId!, property, value);\n          }\n        }\n      },\n    );\n    watch(\n      () => props.paint,\n      (paint) => {\n        if (paint) {\n          for (const [property, value] of Object.entries(paint)) {\n            map.value!.setPaintProperty(props.layerId!, property, value);\n          }\n        }\n      },\n    );\n\n    watch(\n      isLoaded,\n      (il) => {\n        if (il) {\n          map.value!.addLayer(\n            {\n              id: props.layerId!,\n              type: \"background\",\n              metadata: props.metadata,\n              minzoom: props.minzoom,\n              maxzoom: props.maxzoom,\n              layout: props.layout,\n              paint: props.paint,\n            },\n            props.before || undefined,\n          );\n        }\n      },\n      { immediate: true },\n    );\n\n    return () => createCommentVNode(\"Background Layer\");\n  },\n});\n","import {\n  createCommentVNode,\n  getCurrentInstance,\n  inject,\n  warn,\n  watch,\n} from \"vue\";\nimport {\n  componentIdSymbol,\n  isLoadedSymbol,\n  mapSymbol,\n  sourceIdSymbol,\n} from \"@/lib/types\";\nimport { useDisposableLayer } from \"@/lib/composable/useDisposableLayer\";\nimport {\n  genLayerOpts,\n  registerLayerEvents,\n  type LayersWithSource,\n  type LayerProps,\n} from \"@/lib/lib/layer.lib\";\nimport { SourceLib } from \"@/lib/lib/source.lib\";\n\nexport function useLayer<T extends LayersWithSource>(\n  name: string,\n  props: LayerProps<T>,\n) {\n  const sourceId = inject(sourceIdSymbol);\n\n  if (!sourceId && !props.source) {\n    warn(\n      `${name} Layer: layer must be used inside source tag or source prop must be set`,\n    );\n    return;\n  }\n\n  const ci = getCurrentInstance()!,\n    map = inject(mapSymbol)!,\n    isLoaded = inject(isLoadedSymbol)!,\n    cid = inject(componentIdSymbol)!,\n    sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n  useDisposableLayer(props.layerId!, ci);\n\n  watch(\n    () => props.minzoom,\n    () =>\n      map.value!.setLayerZoomRange(\n        props.layerId!,\n        props.minzoom || 0,\n        props.maxzoom || 24,\n      ),\n  );\n  watch(\n    () => props.maxzoom,\n    () =>\n      map.value!.setLayerZoomRange(\n        props.layerId!,\n        props.minzoom || 0,\n        props.maxzoom || 24,\n      ),\n  );\n  watch(\n    () => props.layout,\n    (layout) => {\n      if (layout) {\n        for (const [property, value] of Object.entries(layout)) {\n          map.value!.setLayoutProperty(props.layerId!, property, value);\n        }\n      }\n    },\n    { deep: true },\n  );\n  watch(\n    () => props.paint,\n    (paint) => {\n      if (paint) {\n        for (const [property, value] of Object.entries(paint)) {\n          map.value!.setPaintProperty(props.layerId!, property, value);\n        }\n      }\n    },\n    { deep: true },\n  );\n  watch(\n    () => props.filter,\n    (f) => map.value!.setFilter(props.layerId!, f),\n    { deep: true },\n  );\n\n  watch(\n    [isLoaded, sourceRef],\n    ([il, src]) => {\n      if (il && (src || src === undefined)) {\n        map.value!.addLayer(\n          genLayerOpts<T>(props.layerId!, name, props, sourceId),\n          props.before || undefined,\n        );\n        registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n      }\n    },\n    { immediate: true },\n  );\n\n  return () => createCommentVNode(`${name} Layer`);\n}\n","import type { CircleLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Circle Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglCircleLayer\",\n  props: layerProps<CircleLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<CircleLayerSpecification>) {\n    return useLayer<CircleLayerSpecification>(\"circle\", props);\n  },\n});\n","import type { FillLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Fill Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglFillLayer\",\n  props: layerProps<FillLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<FillLayerSpecification>) {\n    return useLayer<FillLayerSpecification>(\"fill\", props);\n  },\n});\n","import type { FillExtrusionLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Fill Extrusion Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglFillExtrusionLayer\",\n  props: layerProps<FillExtrusionLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<FillExtrusionLayerSpecification>) {\n    return useLayer<FillExtrusionLayerSpecification>(\"fill-extrusion\", props);\n  },\n});\n","import type { HeatmapLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Heatmap Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglHeatmapLayer\",\n  props: layerProps<HeatmapLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<HeatmapLayerSpecification>) {\n    return useLayer<HeatmapLayerSpecification>(\"heatmap\", props);\n  },\n});\n","import type { HillshadeLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Hill shade Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglHillshadeLayer\",\n  props: layerProps<HillshadeLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<HillshadeLayerSpecification>) {\n    return useLayer<HillshadeLayerSpecification>(\"hillshade\", props);\n  },\n});\n","import type { LineLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Line Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglLineLayer\",\n  props: layerProps<LineLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<LineLayerSpecification>) {\n    return useLayer<LineLayerSpecification>(\"line\", props);\n  },\n});\n","import type { RasterLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Raster Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglRasterLayer\",\n  props: layerProps<RasterLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<RasterLayerSpecification>) {\n    return useLayer<RasterLayerSpecification>(\"raster\", props);\n  },\n});\n","import type { SymbolLayerSpecification } from \"maplibre-gl\";\nimport { defineComponent } from \"vue\";\nimport { layerProps, type LayerProps, LAYER_EVENTS, type LayerEventType } from \"@/lib/lib/layer.lib\";\nimport { useLayer } from \"@/lib/composable/useLayer\";\n\n/**\n * Symbol Layer\n *\n * See the [layer style specification](https://maplibre.org/maplibre-style-spec/layers/)\n */\nexport default defineComponent({\n  name: \"MglSymbolLayer\",\n  props: layerProps<SymbolLayerSpecification>(),\n  emits: [...LAYER_EVENTS] as LayerEventType[],\n  setup(props: LayerProps<SymbolLayerSpecification>) {\n    return useLayer<SymbolLayerSpecification>(\"symbol\", props);\n  },\n});\n","import type { App, Plugin } from \"vue\";\n\n// Import vue components\nimport * as components from \"@/lib/components\";\n\n// install function executed by Vue.use()\nconst install: Exclude<Plugin[\"install\"], undefined> =\n  function installVueMaplibreGl(app: App) {\n    Object.entries(components).forEach(([componentName, component]) => {\n      app.component(componentName, component);\n    });\n  };\n\n// Create module definition for Vue.use()\nexport default install;\n\n// To allow individual component use, export components\n// each can be registered via Vue.component()\nexport * from \"@/lib/components\";\n\n// addition exports\nexport * from \"@/lib/types\";\nexport { useMap, type MapInstance } from \"@/lib/lib/mapRegistry\";\nexport { Position } from \"@/lib/components/controls/position.enum\";\nexport { useControl } from \"@/lib/composable/useControl\";\nexport { usePositionWatcher } from \"@/lib/composable/usePositionWatcher\";\nexport { useSource } from \"@/lib/composable/useSource\";\nexport { useDisposableLayer } from \"@/lib/composable/useDisposableLayer\";\n"],"names":["map","mapSymbol","isLoadedSymbol","isInitialized","isInitializedSymbol","componentIdSymbol","sourceIdSymbol","sourceLayerRegistry","markerSymbol","MAP_EVENT_TYPES","createEventHandler","component","ctx","eventName","payload","isLngLatEqual","one","two","firstPosition","LngLat","secondPosition","Position","PositionValues","instances","defaultKey","useMap","key","reactive","registerMap","instance","map_component","defineComponent","val","props","markRaw","getCurrentInstance","container","shallowRef","ref","isLoaded","boundMapEvents","registryItem","provide","watch","v","center","initialize","opts","opt","MaplibreMap","event","handler","restart","dispose","func","en","nextTick","onMounted","onBeforeUnmount","h","usePositionWatcher","source","control","useControl","fun","inject","attribution_control","AttributionControl","CustomControl","isAdded","classes","custom_control","slots","Teleport","createCommentVNode","fullscreen_control","FullscreenControl","triggerResize","geolocate_control","GeolocateControl","emitEvent","arg","navigation_control","NavigationControl","ScaleControlUnit","UnitValues","scale_control","ScaleControl","logo_control","LogoControl","marker_component","emit","marker","markerRoot","isMounted","boundEvents","additionalCb","fn","e","Marker","value","previous","popup_component","expose","root","popup","Popup","image_component","warn","image","SourceLayerRegistry","id","SourceLib","newOpts","mcid","isString","r","useSource","registry","addSource","canvas_source","cid","isRef","src","geojson_source","image_source","raster_source","rasterDem_source","vector_source","video_source","LAYER_EVENTS","layerProps","genLayerOpts","type","registerLayerEvents","layerId","vn","evProp","unregisterLayerEvents","useDisposableLayer","ci","removeLayer","background_layer","layout","property","paint","il","useLayer","name","sourceId","sourceRef","f","circle_layer","fill_layer","fillExtrusion_layer","heatmap_layer","hillshade_layer","line_layer","raster_layer","symbol_layer","install","app","components","componentName"],"mappings":"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"}